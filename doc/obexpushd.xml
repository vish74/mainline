<?xml version="1.0" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//DE" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<refentry id="obexpushd">
  <refentryinfo>
    <date>2007-11-25</date>
    <productname>obexpushd</productname>
    <productnumber>0.7</productnumber>
    <authorgroup>
      <author>
	<firstname>Hendrik</firstname>
	<surname>Sattler</surname>
	<email>post@hendrik-sattler.de</email>
      </author>
      <author>
	<firstname>Eugeniy</firstname>
	<surname>Meshcheryakov</surname>
	<contrib>texted the first version of the manpage</contrib>
	<email>eugen@debian.org</email>
      </author>
    </authorgroup>
  </refentryinfo>

  <refmeta>
    <refentrytitle>obexpushd</refentrytitle>
    <manvolnum>1</manvolnum>
    <refmiscinfo class="manual">User commands</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>obexpushd</refname>
    <refpurpose>receive files with OBEX protocol via Bluetooth, IrDA or network connection</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>obexpushd</command>
      <arg choice="opt"><option>-B</option>
      <replaceable><optional><optional><optional>address</optional>:</optional>channel</optional></replaceable>
      </arg>
      <arg choice="opt"><option>-I</option><replaceable><optional>app</optional></replaceable></arg>
      <arg choice="opt"><option>-N</option>
      <replaceable><optional><optional><optional>address</optional>:</optional>port</optional></replaceable>
      </arg>
      <arg choice="opt"><option>-p</option> <replaceable>file</replaceable></arg>
      <arg choice="opt"><option>-A</option></arg>
      <arg choice="opt"><option>-a</option> <replaceable>file</replaceable></arg>
      <arg choice="opt"><option>-r</option> <replaceable>file</replaceable></arg>
      <arg choice="opt"><option>-s</option> <replaceable>file</replaceable></arg>
      <group choice="opt">
	<arg choice="plain"><option>-n</option></arg>
	<arg choice="plain"><option>-d</option></arg>
      </group>
      <group choice="opt">
	<arg choice="plain"><option>-h</option></arg>
	<arg choice="plain"><option>-v</option></arg>
      </group>
      </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>
    <para>
      obexpushd is a program that can be used to receive files using OBEX (OBject EXchange)
      protocol over Bluetooth, IrDA or network connection.
      It can be used to receive files from mobile phones and other devices. 
    </para>
    <para>
      When run without -d or -n options obexpushd puts itself to the background and starts
      to listen for incoming connections via Bluetooth (default) and/or IrDA and/or network
      connection(TCP).
      obexpushd saves all received files to it's current directory but can alternativly forward
      all received data to a script for further processing.
    </para>
  </refsect1>

  <refsect1>
    <title>Options</title>
    <variablelist>
      <varlistentry>
	<term><option>-B</option></term>
	<listitem><para>
	  Listen to Bluetooth connections. It is possible to specify an address of a local adapter
          and a channel number to listen to.
	  Default is to use <replaceable>channel</replaceable> 9.
	  The <replaceable>address</replaceable> can be either a bluetooth adapter interface name
	  (e.g. "hci0"), only the number of that interface (e.g. "0") or the interface address
	  enclosed in brackets (e.g. "[11:22:33:44:55:66]").
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-I</option></term>
	<listitem><para>
	  Listen to IrDA connections on the default inbox and, in addition and optionally, to the
	  inbox identified by <replaceable>app</replaceable> (example: IrXfer)
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-N</option></term>
	<listitem><para>
	  Listen to network connections. If compiled with TcpOBEX support (openobex > 1.3),
	  it is possible to specify an address and a port number to listen to (default: *:650).
	  Note that to bind to the default TCP OBEX port, you need root priviledges.
	  The <replaceable>address</replaceable> can either be an IPv4 address in quad-dot-notation
	  (e.g. "127.0.0.1"), an IPv6 address enclosed in brackets (e.g. "[::1]") or a "*" as
	  alias for "[::]".
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-p</option></term>
	<listitem><para>
	  Write the process ID of the daemon to <replaceable>file</replaceable>
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-A</option></term>
	<listitem><para>
	  Enable special security/filter support that is special to the transport layer.
	  For bluetooth, this enforces bluetooth pairing (does not conform to protocol specification).
	  For TCP, this enables usage of hosts.allow and hosts.deny files.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-a</option></term>
	<listitem><para>
	  Read <replaceable>user</replaceable>:<replaceable>password</replaceable>
	  pairs from each line of <replaceable>file</replaceable>.
	  Note that many client cannot handle authentication and will stop working when using this
	  option. A realm of "obexpushd" will be sent to the client.
	  Note that no encoding is used, the plain byte sequence will be matched.
	  The user identifier must not be longer than 20 bytes and
	  the password must not be longer than 128 bytes.
	  If <replaceable>file</replaceable> starts with a pipe symbol, the file after the pipe
	  symbol will be executed with one argument, the user name. The output shall be the
	  same as a file line.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-r</option></term>
	<listitem><para>
	  Read <replaceable>realm</replaceable>:<replaceable>user</replaceable>:<replaceable>password</replaceable>
	  triples from each line of <replaceable>file</replaceable>.
	  This is only needed if a client wants a server that authenticates itself. The realm
	  is a value sent by the client. User and password from the first realm match are used.
	  The value of realm can have zero length, else it must be encoded in UTF-8.
	  The values for user and password to not have any encoding, the plain byte sequence will be used.
	  The user identifier must not be longer than 20 bytes and
	  the password must not be longer than 128 bytes.
	  If <replaceable>file</replaceable> starts with a pipe symbol, the file after the pipe
	  symbol will be executed with one argument, the realm. The output shall be the
	  same as a file line.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-s</option></term>
	<listitem><para>
	  Open pipes to the script or program specified by <replaceable>file</replaceable>.
	  These pipes are seen by the program as stdin and stdout.
	  There is one parameter, that can be either "put" or "get".
	</para>
	<para>
	  Further parameters are fed to the script via stdin.
	  With the first parameter being "put", data optionally follows on stdin.
	  With "get", parameters and data are read via stdout.
	  Parameters that are transmitted via stdin or stdout have the form
	  "<replaceable>Parameter</replaceable>: <replaceable>value</replaceable>".
	  The first empty line seperates parameters and data. The empty line can be the first line.
	  In this case, no parameters are present. Line delimiter is system specific.
	  The possible parameters are:
	  <itemizedlist>
	    <listitem><para>
	      "From: <replaceable>type</replaceable>/<replaceable>client-identifier</replaceable>"
	      which specifies the client address. Currently, types can be "bluetooth", "irda" or
	      "tcp". The client identifier is an address (embraced in brackets) with optionally a
	      port (seperated by a colon).
	    </para></listitem>
	    <listitem><para>
	      "Name: <replaceable>utf8-string</replaceable>" (required on "get" output)
	      which specifies the file name,
	    </para></listitem>
	    <listitem><para>
	      "Length: <replaceable>uint32</replaceable>" (required on "get" output) which specifies the
	      amount of data in bytes in the data section that follows, and
	    </para></listitem>
	    <listitem><para>
	      "Type: <replaceable>ascii-string</replaceable>" which specifies the mime type of the data.
	    </para></listitem>
	  </itemizedlist>
	  Unknown parameters shall be ignored.
          With "put", obexpushd is waiting for an ok after the list of parameters. The script must either
	  print a line with "OK" to stdout to accept the input or a line with any other content to reject
	  it.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-n</option></term>
	<listitem><para>
	  Do not detach from terminal.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-d</option></term>
	<listitem><para>
	  Enable debug messages (implies -n).
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-h</option></term>
	<listitem><para>
	  Show summary of options.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-v</option></term>
	<listitem><para>
	  Show version of program.
	</para></listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
</refentry>
