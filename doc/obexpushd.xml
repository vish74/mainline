<?xml version="1.0" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//DE" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<refentry id="obexpushd">
  <refentryinfo>
    <date>2006-10-24</date>
    <productname>obexpushd</productname>
    <productnumber>0.4</productnumber>
    <authorgroup>
      <author>
	<firstname>Hendrik</firstname>
	<surname>Sattler</surname>
	<email>post@hendrik-sattler.de</email>
      </author>
      <author>
	<firstname>Eugeniy</firstname>
	<surname>Meshcheryakov</surname>
	<contrib>texted the first version of the manpage</contrib>
	<email>eugen@debian.org</email>
      </author>
    </authorgroup>
  </refentryinfo>

  <refmeta>
    <refentrytitle>obexpushd</refentrytitle>
    <manvolnum>1</manvolnum>
    <refmiscinfo class="manual">User commands</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>obexpushd</refname>
    <refpurpose>receive files with OBEX protocol via Bluetooth or IrDA</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>obexpushd</command>
      <arg choice="opt"><option>-B</option><replaceable><optional>channel</optional></replaceable></arg>
      <arg choice="opt"><option>-I</option><replaceable><optional>app</optional></replaceable></arg>
      <arg choice="opt"><option>-p</option> <replaceable>file</replaceable></arg>
      <arg choice="opt"><option>-a</option> <replaceable>file</replaceable></arg>
      <arg choice="opt"><option>-r</option> <replaceable>file</replaceable></arg>
      <arg choice="opt"><option>-s</option> <replaceable>file</replaceable></arg>
      <group choice="opt">
	<arg choice="plain"><option>-n</option></arg>
	<arg choice="plain"><option>-d</option></arg>
      </group>
      <group choice="opt">
	<arg choice="plain"><option>-h</option></arg>
	<arg choice="plain"><option>-v</option></arg>
      </group>
      </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>
    <para>
      obexpushd is a program that can be used to receive files using OBEX (OBject EXchange)
      protocol over Bluetooth or IrDA. It can be used to receive files from mobile phones
      and other devices. 
    </para>
    <para>
      When run without -d or -n options obexpushd puts itself to the background and starts
      to listen for incoming connections via Bluetooth (default) and/or IrDA.
      obexpushd saves all received files to it's current directory but can alternativly forward
      all received data to a script for further processing.
    </para>
  </refsect1>

  <refsect1>
    <title>Options</title>
    <variablelist>
      <varlistentry>
	<term><option>-B</option></term>
	<listitem><para>
	  Listen to Bluetooth connections. It is possible to specify a channel number to listen to.
	  Default is to use <replaceable>channel</replaceable> 9.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-I</option></term>
	<listitem><para>
	  Listen to IrDA connections (<replaceable>app</replaceable> example: IrXfer).
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-p</option></term>
	<listitem><para>
	  Write the process ID of the daemon to <replaceable>file</replaceable>
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-a</option></term>
	<listitem><para>
	  Read <replaceable>user</replaceable>:<replaceable>password</replaceable>
	  pairs from each line of <replaceable>file</replaceable>.
	  Note that many client cannot handle authentication and will stop working when using this
	  option. A realm of "obexpushd" will be sent to the client.
	  Note that no encoding is used, the plain byte sequence will be matched.
	  The user identifier must not be longer than 20 bytes and
	  the password must not be longer than 128 bytes.
	  If <replaceable>file</replaceable> start with a pipe symbol, the file after the pipe
	  symbol will be executed with one argument, the user name. The output shall be the
	  same as a file line.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-r</option></term>
	<listitem><para>
	  Read <replaceable>realm</replaceable>:<replaceable>user</replaceable>:<replaceable>password</replaceable>
	  triples from each line of <replaceable>file</replaceable>.
	  This is only needed if a client wants a server that authenticates itself. The realm
	  is a value sent by the client and user and password from the first realm match are used.
	  The value of realm can have zero length. If not, it must be encoded in UTF-8.
	  The values for user and password to not have any encoding, the plain byte sequence will be used.
	  The user identifier must not be longer than 20 bytes and
	  the password must not be longer than 128 bytes.
	  If <replaceable>file</replaceable> start with a pipe symbol, the file after the pipe
	  symbol will be executed with one argument, the realm. The output shall be the
	  same as a file line.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-s</option></term>
	<listitem><para>
	  Open a pipe to the script or program specified by <replaceable>file</replaceable>.
	  The data is fed to stdin. There may be zero, one or two parameters, the first one is
	  the name of the received file (UTF-8 encoded), the second one is the file type.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-n</option></term>
	<listitem><para>
	  Do not detach from terminal.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-d</option></term>
	<listitem><para>
	  Enable debug messages (implies -n).
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-h</option></term>
	<listitem><para>
	  Show summary of options.
	</para></listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-v</option></term>
	<listitem><para>
	  Show version of program.
	</para></listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
</refentry>
